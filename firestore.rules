rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is an admin
    function isAdmin(userEmail) {
      return get(/databases/$(database)/documents/users/$(userEmail)).data.role == 'admin';
    }

    match /users/{userEmail} {
      // Admins can read and write any user document
      allow read, write: if request.auth != null && isAdmin(request.auth.token.email);
      // Non-admin users can only read their own document
      allow read: if request.auth != null && request.auth.token.email == userEmail;
    }

    match /projects/{projectId} {
      // Admins can read all projects
      allow read: if request.auth != null && isAdmin(request.auth.token.email);
      // Any authenticated user can read projects.
      allow read, write: if request.auth != null;
    }

    match /tasks/{taskId} {
        // Admins can read/write all tasks
        allow read, write: if request.auth != null && isAdmin(request.auth.token.email);
        // Authenticated users can create tasks and update their own assigned tasks
        allow create: if request.auth != null;
        allow update: if request.auth != null && resource.data.assignedTo == request.auth.token.email;
        // Any authenticated user can read tasks
        allow read: if request.auth != null;
    }

    match /userSessions/{sessionId} {
      // Admins can read all user sessions
      allow read: if request.auth != null && isAdmin(request.auth.token.email);
      // Users can create sessions for themselves and read their own sessions
      allow create: if request.auth != null && request.resource.data.userEmail == request.auth.token.email;
      allow read: if request.auth != null && resource.data.userEmail == request.auth.token.email;
    }

    match /verificationLog/{logId} {
        // Admins can read all verification logs
        allow read: if request.auth != null && isAdmin(request.auth.token.email);
        // Users can create logs for themselves
        allow create: if request.auth != null && request.resource.data.userEmail == request.auth.token.email;
    }
  }
}
