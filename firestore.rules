rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function getRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }

    function isAuthOwner(docData) {
      return request.auth.uid == docData.userEmail;
    }

    function isAdmin() {
      return getRole(request.auth.uid) == 'admin';
    }

    match /users/{email} {
      allow read: if request.auth.uid != null;
      allow write: if isAdmin();
      allow create: if request.auth.uid != null;
    }

    match /projects/{projectId} {
      allow read: if request.auth.uid != null;
      allow write: if isAdmin();
    }
    
    match /tasks/{taskId} {
      allow read: if request.auth.uid != null;
      allow write: if isAdmin();
    }

    match /userSessions/{sessionId} {
      allow read: if isAuthOwner(resource.data) || isAdmin();
      allow create: if isAuthOwner(request.resource.data);
    }
    
    match /verificationLog/{logId} {
      allow read: if isAuthOwner(resource.data) || isAdmin();
      allow create: if isAuthOwner(request.resource.data);
    }
  }
}