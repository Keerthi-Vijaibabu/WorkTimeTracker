rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function signedIn() {
      return request.auth != null;
    }

    function isUser(uid) {
      return signedIn() && request.auth.uid == uid;
    }
    
    function isAdmin() {
      return request.auth.token.admin == true;
    }

    match /users/{uid} {
      allow read, write: if isUser(uid) || isAdmin();

      match /sessions/{sessionId} {
        allow read, write: if isUser(uid);
      }
      
      match /verificationLog/{logId} {
        // A user can create their own verification log
        allow create: if isUser(uid);
        // Only admins can read/update/delete them after creation
        allow read, update, delete: if isAdmin();
      }
    }

    // Admins can read all sessions via collection group query
    match /{path=**}/sessions/{sessionId} {
      allow read: if isAdmin();
    }
    
    // Admins can read all verification logs via collection group query
    match /{path=**}/verificationLog/{logId} {
      allow read: if isAdmin();
    }

    match /projects/{projectId} {
      allow read, list: if signedIn();
      allow create, update, delete: if isAdmin();
    }

    match /tasks/{taskId} {
      allow read, list: if signedIn();
      allow create: if isAdmin();
      // Admins can update anything.
      // Users can update the status of a task assigned to them.
      allow update: if (isAdmin() || (isUser(resource.data.assignedTo) && request.resource.data.status != resource.data.status));
      allow delete: if isAdmin();
    }
  }
}
