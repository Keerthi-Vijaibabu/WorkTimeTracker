rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin(userEmail) {
      // Replace with your actual admin email
      return userEmail == "admin@example.com";
    }

    // Projects: Logged-in users can read, admins can write
    match /projects/{projectId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.token.email);
    }

    // Tasks: Logged-in users can read all tasks.
    // They can create tasks and can only update tasks assigned to them.
    // Admins can write any task.
    match /tasks/{taskId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && (resource.data.assignedTo == request.auth.token.email || isAdmin(request.auth.token.email));
    }
    
    // User Sessions: Users can only create sessions for themselves.
    // Admins can read all sessions.
    match /userSessions/{sessionId} {
      allow read: if request.auth != null && isAdmin(request.auth.token.email);
      allow create: if request.auth != null && request.resource.data.userEmail == request.auth.token.email;
    }

    // Verification Log: Users can only create logs for themselves.
    // Admins can read all logs.
    match /verificationLog/{logId} {
      allow read: if request.auth != null && isAdmin(request.auth.token.email);
      allow create: if request.auth != null && request.resource.data.userEmail == request.auth.token.email;
    }
  }
}