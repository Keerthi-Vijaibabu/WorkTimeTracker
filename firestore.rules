rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function signedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return signedIn() && request.auth.token.admin == true;
    }

    // Rules for collection group queries used by the admin panel
    match /{path=**}/sessions/{sessionId} {
      allow read: if isAdmin();
    }
    
    match /{path=**}/verificationLog/{logId} {
      allow read: if isAdmin();
    }

    // User-specific rules
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();

      // Sessions can be created by the user, and read by the user or an admin.
      match /sessions/{sessionId} {
        allow create: if request.auth.uid == userId;
        // Read access is handled by the user-specific rule above and the collection group rule
      }

      // Verification logs can be created by the user, and read by an admin.
      match /verificationLog/{logId} {
        allow create: if request.auth.uid == userId;
        // Read access for admins is handled by the collection group rule.
      }
    }
    
    match /projects/{projectId} {
      allow read: if signedIn();
      allow write: if isAdmin();
    }

    match /tasks/{taskId} {
      allow read: if signedIn();
      allow create: if isAdmin();
      // Admins can update any field.
      // Users can only update the status of a task assigned to them.
      allow update: if isAdmin() || (request.auth.uid != null && request.resource.data.assignedTo == request.auth.token.email && request.resource.diff(resource).affectedKeys().hasOnly(['status']));
    }
  }
}
