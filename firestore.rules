rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function signedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return signedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // User profiles
    // Users can read their own profile
    // Admins can read any profile
    // Users can only create their own profile document
    // Users can update their own profile, admins can update any
    match /users/{userId} {
      allow read: if signedIn() && (request.auth.uid == userId || isAdmin());
      allow create: if signedIn() && request.auth.uid == userId;
      allow update: if signedIn() && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    // Allow admins to list all users
    match /users/{document=**} {
        allow list: if isAdmin();
    }
    
    // Projects
    // Any signed-in user can read projects
    // Only admins can create, update, or delete projects
    match /projects/{projectId} {
      allow read: if signedIn();
      allow write: if isAdmin();
    }
    
    // Tasks
    // Any signed-in user can read tasks
    // Only admins can create or delete tasks
    // Admins can update any task field
    // Users can only update the status of tasks assigned to them
    match /tasks/{taskId} {
      allow read: if signedIn();
      allow create, delete: if isAdmin();
      allow update: if isAdmin() || (signedIn() && request.resource.data.assignedTo == request.auth.token.email && request.resource.data.status != resource.data.status);
    }
    
    // User Subcollections (sessions, verificationLog)
    // Users can read/write to their own subcollections
    match /users/{userId}/{collection}/{docId} {
        allow read, write: if signedIn() && request.auth.uid == userId;
    }
    
    // Collection Group Queries for Admin
    // Admins can read all sessions and verification logs from all users
    match /{path=**}/sessions/{sessionId} {
      allow read: if isAdmin();
    }
    
    match /{path=**}/verificationLog/{logId} {
       allow read: if isAdmin();
    }
  }
}
