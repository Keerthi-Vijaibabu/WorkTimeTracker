
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function signedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return signedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USERS
    // Admins can read/write any user document.
    // Users can read their own document.
    // New users can create their own document.
    match /users/{userId} {
      allow read: if signedIn() && (isAdmin() || request.auth.uid == userId);
      allow write: if isAdmin();
      allow create: if signedIn() && request.auth.uid == userId;
    }
    
    // PROJECTS
    // Admins can read/write all projects.
    // Signed-in users can read projects.
    match /projects/{projectId} {
      allow read: if signedIn();
      allow write: if isAdmin();
    }
    
    // TASKS
    // Admins can read/write all tasks.
    // Signed-in users can read tasks.
    // Users can only update the status of a task assigned to them.
    match /tasks/{taskId} {
      allow read: if signedIn();
      allow write: if isAdmin();
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status']) && signedIn() && resource.data.assignedTo == request.auth.token.email;
    }

    // SESSIONS (Subcollection of Users)
    // A user can read/write their own sessions.
    match /users/{userId}/sessions/{sessionId} {
      allow read, write: if signedIn() && request.auth.uid == userId;
    }
    
    // VERIFICATION LOG (Subcollection of Users)
    // A user can write to their own verification log.
    match /users/{userId}/verificationLog/{logId} {
      allow write: if signedIn() && request.auth.uid == userId;
    }

    // COLLECTION GROUP QUERIES for Admin Dashboard
    // These allow admins to query across all user subcollections.
    match /{path=**}/sessions/{sessionId} {
      allow list: if isAdmin();
    }
    
    match /{path=**}/verificationLog/{logId} {
      allow list: if isAdmin();
    }
  }
}
